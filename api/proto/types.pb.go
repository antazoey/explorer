// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/types.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Side int32

const (
	Side_Buy  Side = 0
	Side_Sell Side = 1
)

var Side_name = map[int32]string{
	0: "Buy",
	1: "Sell",
}

var Side_value = map[string]int32{
	"Buy":  0,
	"Sell": 1,
}

func (x Side) String() string {
	return proto.EnumName(Side_name, int32(x))
}

func (Side) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{0}
}

type OrderError int32

const (
	OrderError_NONE                        OrderError = 0
	OrderError_INVALID_MARKET_ID           OrderError = 1
	OrderError_INVALID_ORDER_ID            OrderError = 2
	OrderError_ORDER_OUT_OF_SEQUENCE       OrderError = 3
	OrderError_INVALID_REMAINING_SIZE      OrderError = 4
	OrderError_TIME_FAILURE                OrderError = 5
	OrderError_ORDER_REMOVAL_FAILURE       OrderError = 6
	OrderError_INVALID_EXPIRATION_DATETIME OrderError = 7
	OrderError_INVALID_ORDER_REFERENCE     OrderError = 8
	OrderError_EDIT_NOT_ALLOWED            OrderError = 9
	OrderError_ORDER_AMEND_FAILURE         OrderError = 10
	OrderError_ORDER_NOT_FOUND             OrderError = 11
	OrderError_INVALID_PARTY_ID            OrderError = 12
	OrderError_MARKET_CLOSED               OrderError = 13
	OrderError_MARGIN_CHECK_FAILED         OrderError = 14
	OrderError_MISSING_GENERAL_ACCOUNT     OrderError = 15
	OrderError_INTERNAL_ERROR              OrderError = 16
	OrderError_INVALID_SIZE                OrderError = 17
	OrderError_INVALID_PERSISTENCE         OrderError = 18
)

var OrderError_name = map[int32]string{
	0:  "NONE",
	1:  "INVALID_MARKET_ID",
	2:  "INVALID_ORDER_ID",
	3:  "ORDER_OUT_OF_SEQUENCE",
	4:  "INVALID_REMAINING_SIZE",
	5:  "TIME_FAILURE",
	6:  "ORDER_REMOVAL_FAILURE",
	7:  "INVALID_EXPIRATION_DATETIME",
	8:  "INVALID_ORDER_REFERENCE",
	9:  "EDIT_NOT_ALLOWED",
	10: "ORDER_AMEND_FAILURE",
	11: "ORDER_NOT_FOUND",
	12: "INVALID_PARTY_ID",
	13: "MARKET_CLOSED",
	14: "MARGIN_CHECK_FAILED",
	15: "MISSING_GENERAL_ACCOUNT",
	16: "INTERNAL_ERROR",
	17: "INVALID_SIZE",
	18: "INVALID_PERSISTENCE",
}

var OrderError_value = map[string]int32{
	"NONE":                        0,
	"INVALID_MARKET_ID":           1,
	"INVALID_ORDER_ID":            2,
	"ORDER_OUT_OF_SEQUENCE":       3,
	"INVALID_REMAINING_SIZE":      4,
	"TIME_FAILURE":                5,
	"ORDER_REMOVAL_FAILURE":       6,
	"INVALID_EXPIRATION_DATETIME": 7,
	"INVALID_ORDER_REFERENCE":     8,
	"EDIT_NOT_ALLOWED":            9,
	"ORDER_AMEND_FAILURE":         10,
	"ORDER_NOT_FOUND":             11,
	"INVALID_PARTY_ID":            12,
	"MARKET_CLOSED":               13,
	"MARGIN_CHECK_FAILED":         14,
	"MISSING_GENERAL_ACCOUNT":     15,
	"INTERNAL_ERROR":              16,
	"INVALID_SIZE":                17,
	"INVALID_PERSISTENCE":         18,
}

func (x OrderError) String() string {
	return proto.EnumName(OrderError_name, int32(x))
}

func (OrderError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{1}
}

// Order Time in Force
type Order_TimeInForce int32

const (
	// good til cancelled
	Order_GTC Order_TimeInForce = 0
	// good til time
	Order_GTT Order_TimeInForce = 1
	// immediate or cancel
	Order_IOC Order_TimeInForce = 2
	// fill or kill
	Order_FOK Order_TimeInForce = 3
)

var Order_TimeInForce_name = map[int32]string{
	0: "GTC",
	1: "GTT",
	2: "IOC",
	3: "FOK",
}

var Order_TimeInForce_value = map[string]int32{
	"GTC": 0,
	"GTT": 1,
	"IOC": 2,
	"FOK": 3,
}

func (x Order_TimeInForce) String() string {
	return proto.EnumName(Order_TimeInForce_name, int32(x))
}

func (Order_TimeInForce) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{8, 0}
}

// Order Type
type Order_Type int32

const (
	// used for Limit orders
	Order_LIMIT Order_Type = 0
	// used for Market orders
	Order_MARKET Order_Type = 1
	// used for orders where the initiating party is the network (used for distressed traders)
	Order_NETWORK Order_Type = 2
)

var Order_Type_name = map[int32]string{
	0: "LIMIT",
	1: "MARKET",
	2: "NETWORK",
}

var Order_Type_value = map[string]int32{
	"LIMIT":   0,
	"MARKET":  1,
	"NETWORK": 2,
}

func (x Order_Type) String() string {
	return proto.EnumName(Order_Type_name, int32(x))
}

func (Order_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{8, 1}
}

type Order_Status int32

const (
	Order_Active          Order_Status = 0
	Order_Expired         Order_Status = 1
	Order_Cancelled       Order_Status = 2
	Order_Stopped         Order_Status = 3
	Order_Filled          Order_Status = 4
	Order_Rejected        Order_Status = 5
	Order_PartiallyFilled Order_Status = 6
)

var Order_Status_name = map[int32]string{
	0: "Active",
	1: "Expired",
	2: "Cancelled",
	3: "Stopped",
	4: "Filled",
	5: "Rejected",
	6: "PartiallyFilled",
}

var Order_Status_value = map[string]int32{
	"Active":          0,
	"Expired":         1,
	"Cancelled":       2,
	"Stopped":         3,
	"Filled":          4,
	"Rejected":        5,
	"PartiallyFilled": 6,
}

func (x Order_Status) String() string {
	return proto.EnumName(Order_Status_name, int32(x))
}

func (Order_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{8, 2}
}

type Vote_Value int32

const (
	Vote_NO  Vote_Value = 0
	Vote_YES Vote_Value = 1
)

var Vote_Value_name = map[int32]string{
	0: "NO",
	1: "YES",
}

var Vote_Value_value = map[string]int32{
	"NO":  0,
	"YES": 1,
}

func (x Vote_Value) String() string {
	return proto.EnumName(Vote_Value_name, int32(x))
}

func (Vote_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{9, 0}
}

type Proposal_State int32

const (
	Proposal_FAILED   Proposal_State = 0
	Proposal_OPEN     Proposal_State = 1
	Proposal_PASSED   Proposal_State = 2
	Proposal_REJECTED Proposal_State = 3
	Proposal_DECLINED Proposal_State = 4
	Proposal_ENACTED  Proposal_State = 5
)

var Proposal_State_name = map[int32]string{
	0: "FAILED",
	1: "OPEN",
	2: "PASSED",
	3: "REJECTED",
	4: "DECLINED",
	5: "ENACTED",
}

var Proposal_State_value = map[string]int32{
	"FAILED":   0,
	"OPEN":     1,
	"PASSED":   2,
	"REJECTED": 3,
	"DECLINED": 4,
	"ENACTED":  5,
}

func (x Proposal_State) String() string {
	return proto.EnumName(Proposal_State_name, int32(x))
}

func (Proposal_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{17, 0}
}

type SignedBundle struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sig  []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	// Types that are valid to be assigned to Auth:
	//	*SignedBundle_Address
	//	*SignedBundle_PubKey
	Auth                 isSignedBundle_Auth `protobuf_oneof:"auth"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SignedBundle) Reset()         { *m = SignedBundle{} }
func (m *SignedBundle) String() string { return proto.CompactTextString(m) }
func (*SignedBundle) ProtoMessage()    {}
func (*SignedBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{0}
}

func (m *SignedBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedBundle.Unmarshal(m, b)
}
func (m *SignedBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedBundle.Marshal(b, m, deterministic)
}
func (m *SignedBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedBundle.Merge(m, src)
}
func (m *SignedBundle) XXX_Size() int {
	return xxx_messageInfo_SignedBundle.Size(m)
}
func (m *SignedBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedBundle.DiscardUnknown(m)
}

var xxx_messageInfo_SignedBundle proto.InternalMessageInfo

func (m *SignedBundle) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SignedBundle) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type isSignedBundle_Auth interface {
	isSignedBundle_Auth()
}

type SignedBundle_Address struct {
	Address []byte `protobuf:"bytes,101,opt,name=address,proto3,oneof"`
}

type SignedBundle_PubKey struct {
	PubKey []byte `protobuf:"bytes,102,opt,name=pubKey,proto3,oneof"`
}

func (*SignedBundle_Address) isSignedBundle_Auth() {}

func (*SignedBundle_PubKey) isSignedBundle_Auth() {}

func (m *SignedBundle) GetAuth() isSignedBundle_Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *SignedBundle) GetAddress() []byte {
	if x, ok := m.GetAuth().(*SignedBundle_Address); ok {
		return x.Address
	}
	return nil
}

func (m *SignedBundle) GetPubKey() []byte {
	if x, ok := m.GetAuth().(*SignedBundle_PubKey); ok {
		return x.PubKey
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SignedBundle) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SignedBundle_Address)(nil),
		(*SignedBundle_PubKey)(nil),
	}
}

type OrderSubmission struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarketID             string            `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string            `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Price                uint64            `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Size                 uint64            `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Side                 Side              `protobuf:"varint,6,opt,name=side,proto3,enum=types.Side" json:"side,omitempty"`
	TimeInForce          Order_TimeInForce `protobuf:"varint,7,opt,name=timeInForce,proto3,enum=types.Order_TimeInForce" json:"timeInForce,omitempty"`
	ExpiresAt            int64             `protobuf:"varint,8,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Type                 Order_Type        `protobuf:"varint,9,opt,name=type,proto3,enum=types.Order_Type" json:"type,omitempty"`
	Reference            string            `protobuf:"bytes,10,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OrderSubmission) Reset()         { *m = OrderSubmission{} }
func (m *OrderSubmission) String() string { return proto.CompactTextString(m) }
func (*OrderSubmission) ProtoMessage()    {}
func (*OrderSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{1}
}

func (m *OrderSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderSubmission.Unmarshal(m, b)
}
func (m *OrderSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderSubmission.Marshal(b, m, deterministic)
}
func (m *OrderSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderSubmission.Merge(m, src)
}
func (m *OrderSubmission) XXX_Size() int {
	return xxx_messageInfo_OrderSubmission.Size(m)
}
func (m *OrderSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_OrderSubmission proto.InternalMessageInfo

func (m *OrderSubmission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderSubmission) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderSubmission) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *OrderSubmission) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderSubmission) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *OrderSubmission) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_Buy
}

func (m *OrderSubmission) GetTimeInForce() Order_TimeInForce {
	if m != nil {
		return m.TimeInForce
	}
	return Order_GTC
}

func (m *OrderSubmission) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *OrderSubmission) GetType() Order_Type {
	if m != nil {
		return m.Type
	}
	return Order_LIMIT
}

func (m *OrderSubmission) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type OrderCancellation struct {
	OrderID              string   `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	MarketID             string   `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID              string   `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancellation) Reset()         { *m = OrderCancellation{} }
func (m *OrderCancellation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellation) ProtoMessage()    {}
func (*OrderCancellation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{2}
}

func (m *OrderCancellation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancellation.Unmarshal(m, b)
}
func (m *OrderCancellation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancellation.Marshal(b, m, deterministic)
}
func (m *OrderCancellation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellation.Merge(m, src)
}
func (m *OrderCancellation) XXX_Size() int {
	return xxx_messageInfo_OrderCancellation.Size(m)
}
func (m *OrderCancellation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellation proto.InternalMessageInfo

func (m *OrderCancellation) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderCancellation) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderCancellation) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

type NotifyTraderAccount struct {
	TraderID             string   `protobuf:"bytes,1,opt,name=traderID,proto3" json:"traderID,omitempty"`
	Amount               uint64   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotifyTraderAccount) Reset()         { *m = NotifyTraderAccount{} }
func (m *NotifyTraderAccount) String() string { return proto.CompactTextString(m) }
func (*NotifyTraderAccount) ProtoMessage()    {}
func (*NotifyTraderAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{3}
}

func (m *NotifyTraderAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotifyTraderAccount.Unmarshal(m, b)
}
func (m *NotifyTraderAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotifyTraderAccount.Marshal(b, m, deterministic)
}
func (m *NotifyTraderAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifyTraderAccount.Merge(m, src)
}
func (m *NotifyTraderAccount) XXX_Size() int {
	return xxx_messageInfo_NotifyTraderAccount.Size(m)
}
func (m *NotifyTraderAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifyTraderAccount.DiscardUnknown(m)
}

var xxx_messageInfo_NotifyTraderAccount proto.InternalMessageInfo

func (m *NotifyTraderAccount) GetTraderID() string {
	if m != nil {
		return m.TraderID
	}
	return ""
}

func (m *NotifyTraderAccount) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Withdraw struct {
	PartyID              string   `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Amount               uint64   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Asset                string   `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Withdraw) Reset()         { *m = Withdraw{} }
func (m *Withdraw) String() string { return proto.CompactTextString(m) }
func (*Withdraw) ProtoMessage()    {}
func (*Withdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{4}
}

func (m *Withdraw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Withdraw.Unmarshal(m, b)
}
func (m *Withdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Withdraw.Marshal(b, m, deterministic)
}
func (m *Withdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Withdraw.Merge(m, src)
}
func (m *Withdraw) XXX_Size() int {
	return xxx_messageInfo_Withdraw.Size(m)
}
func (m *Withdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_Withdraw.DiscardUnknown(m)
}

var xxx_messageInfo_Withdraw proto.InternalMessageInfo

func (m *Withdraw) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *Withdraw) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Withdraw) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type OrderAmendment struct {
	// required to find the order, not being updated
	OrderID  string `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	PartyID  string `protobuf:"bytes,2,opt,name=partyID,proto3" json:"partyID,omitempty"`
	MarketID string `protobuf:"bytes,3,opt,name=marketID,proto3" json:"marketID,omitempty"`
	// these can be amended
	Price                uint64            `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	SizeDelta            int64             `protobuf:"varint,5,opt,name=sizeDelta,proto3" json:"sizeDelta,omitempty"`
	ExpiresAt            int64             `protobuf:"varint,6,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	TimeInForce          Order_TimeInForce `protobuf:"varint,7,opt,name=timeInForce,proto3,enum=types.Order_TimeInForce" json:"timeInForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OrderAmendment) Reset()         { *m = OrderAmendment{} }
func (m *OrderAmendment) String() string { return proto.CompactTextString(m) }
func (*OrderAmendment) ProtoMessage()    {}
func (*OrderAmendment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{5}
}

func (m *OrderAmendment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderAmendment.Unmarshal(m, b)
}
func (m *OrderAmendment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderAmendment.Marshal(b, m, deterministic)
}
func (m *OrderAmendment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderAmendment.Merge(m, src)
}
func (m *OrderAmendment) XXX_Size() int {
	return xxx_messageInfo_OrderAmendment.Size(m)
}
func (m *OrderAmendment) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderAmendment.DiscardUnknown(m)
}

var xxx_messageInfo_OrderAmendment proto.InternalMessageInfo

func (m *OrderAmendment) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *OrderAmendment) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *OrderAmendment) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *OrderAmendment) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderAmendment) GetSizeDelta() int64 {
	if m != nil {
		return m.SizeDelta
	}
	return 0
}

func (m *OrderAmendment) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *OrderAmendment) GetTimeInForce() Order_TimeInForce {
	if m != nil {
		return m.TimeInForce
	}
	return Order_GTC
}

type NodeRegistration struct {
	PubKey               string   `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeRegistration) Reset()         { *m = NodeRegistration{} }
func (m *NodeRegistration) String() string { return proto.CompactTextString(m) }
func (*NodeRegistration) ProtoMessage()    {}
func (*NodeRegistration) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{6}
}

func (m *NodeRegistration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRegistration.Unmarshal(m, b)
}
func (m *NodeRegistration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRegistration.Marshal(b, m, deterministic)
}
func (m *NodeRegistration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRegistration.Merge(m, src)
}
func (m *NodeRegistration) XXX_Size() int {
	return xxx_messageInfo_NodeRegistration.Size(m)
}
func (m *NodeRegistration) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRegistration.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRegistration proto.InternalMessageInfo

func (m *NodeRegistration) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type NodeVote struct {
	PubKey               string   `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Reference            string   `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeVote) Reset()         { *m = NodeVote{} }
func (m *NodeVote) String() string { return proto.CompactTextString(m) }
func (*NodeVote) ProtoMessage()    {}
func (*NodeVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{7}
}

func (m *NodeVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeVote.Unmarshal(m, b)
}
func (m *NodeVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeVote.Marshal(b, m, deterministic)
}
func (m *NodeVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeVote.Merge(m, src)
}
func (m *NodeVote) XXX_Size() int {
	return xxx_messageInfo_NodeVote.Size(m)
}
func (m *NodeVote) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeVote.DiscardUnknown(m)
}

var xxx_messageInfo_NodeVote proto.InternalMessageInfo

func (m *NodeVote) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *NodeVote) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type Order struct {
	Id          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarketID    string            `protobuf:"bytes,2,opt,name=marketID,proto3" json:"marketID,omitempty"`
	PartyID     string            `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Side        Side              `protobuf:"varint,4,opt,name=side,proto3,enum=types.Side" json:"side,omitempty"`
	Price       uint64            `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Size        uint64            `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Remaining   uint64            `protobuf:"varint,7,opt,name=remaining,proto3" json:"remaining,omitempty"`
	TimeInForce Order_TimeInForce `protobuf:"varint,8,opt,name=timeInForce,proto3,enum=types.Order_TimeInForce" json:"timeInForce,omitempty"`
	Type        Order_Type        `protobuf:"varint,9,opt,name=type,proto3,enum=types.Order_Type" json:"type,omitempty"`
	CreatedAt   int64             `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// If `status` is `Rejected`, check `reason`.
	Status    Order_Status `protobuf:"varint,11,opt,name=status,proto3,enum=types.Order_Status" json:"status,omitempty"`
	ExpiresAt int64        `protobuf:"varint,12,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Reference string       `protobuf:"bytes,13,opt,name=reference,proto3" json:"reference,omitempty"`
	Reason    OrderError   `protobuf:"varint,14,opt,name=reason,proto3,enum=types.OrderError" json:"reason,omitempty"`
	UpdatedAt int64        `protobuf:"varint,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// Versioning support for amends, orders start at version 1 and increment
	// after each successful amend
	Version              uint64   `protobuf:"varint,16,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{8}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *Order) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *Order) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_Buy
}

func (m *Order) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Order) GetRemaining() uint64 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *Order) GetTimeInForce() Order_TimeInForce {
	if m != nil {
		return m.TimeInForce
	}
	return Order_GTC
}

func (m *Order) GetType() Order_Type {
	if m != nil {
		return m.Type
	}
	return Order_LIMIT
}

func (m *Order) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Order) GetStatus() Order_Status {
	if m != nil {
		return m.Status
	}
	return Order_Active
}

func (m *Order) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *Order) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *Order) GetReason() OrderError {
	if m != nil {
		return m.Reason
	}
	return OrderError_NONE
}

func (m *Order) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Order) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type Vote struct {
	PartyID              string     `protobuf:"bytes,1,opt,name=partyID,proto3" json:"partyID,omitempty"`
	Value                Vote_Value `protobuf:"varint,2,opt,name=value,proto3,enum=types.Vote_Value" json:"value,omitempty"`
	ProposalID           string     `protobuf:"bytes,3,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{9}
}

func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (m *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(m, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *Vote) GetValue() Vote_Value {
	if m != nil {
		return m.Value
	}
	return Vote_NO
}

func (m *Vote) GetProposalID() string {
	if m != nil {
		return m.ProposalID
	}
	return ""
}

type NetworkConfiguration struct {
	MinCloseInSeconds     int64    `protobuf:"varint,1,opt,name=minCloseInSeconds,proto3" json:"minCloseInSeconds,omitempty"`
	MaxCloseInSeconds     int64    `protobuf:"varint,2,opt,name=maxCloseInSeconds,proto3" json:"maxCloseInSeconds,omitempty"`
	MinEnactInSeconds     int64    `protobuf:"varint,3,opt,name=minEnactInSeconds,proto3" json:"minEnactInSeconds,omitempty"`
	MaxEnactInSeconds     int64    `protobuf:"varint,4,opt,name=maxEnactInSeconds,proto3" json:"maxEnactInSeconds,omitempty"`
	MinParticipationStake uint64   `protobuf:"varint,5,opt,name=minParticipationStake,proto3" json:"minParticipationStake,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *NetworkConfiguration) Reset()         { *m = NetworkConfiguration{} }
func (m *NetworkConfiguration) String() string { return proto.CompactTextString(m) }
func (*NetworkConfiguration) ProtoMessage()    {}
func (*NetworkConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{10}
}

func (m *NetworkConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkConfiguration.Unmarshal(m, b)
}
func (m *NetworkConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkConfiguration.Marshal(b, m, deterministic)
}
func (m *NetworkConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkConfiguration.Merge(m, src)
}
func (m *NetworkConfiguration) XXX_Size() int {
	return xxx_messageInfo_NetworkConfiguration.Size(m)
}
func (m *NetworkConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkConfiguration proto.InternalMessageInfo

func (m *NetworkConfiguration) GetMinCloseInSeconds() int64 {
	if m != nil {
		return m.MinCloseInSeconds
	}
	return 0
}

func (m *NetworkConfiguration) GetMaxCloseInSeconds() int64 {
	if m != nil {
		return m.MaxCloseInSeconds
	}
	return 0
}

func (m *NetworkConfiguration) GetMinEnactInSeconds() int64 {
	if m != nil {
		return m.MinEnactInSeconds
	}
	return 0
}

func (m *NetworkConfiguration) GetMaxEnactInSeconds() int64 {
	if m != nil {
		return m.MaxEnactInSeconds
	}
	return 0
}

func (m *NetworkConfiguration) GetMinParticipationStake() uint64 {
	if m != nil {
		return m.MinParticipationStake
	}
	return 0
}

type UpdateMarket struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateMarket) Reset()         { *m = UpdateMarket{} }
func (m *UpdateMarket) String() string { return proto.CompactTextString(m) }
func (*UpdateMarket) ProtoMessage()    {}
func (*UpdateMarket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{11}
}

func (m *UpdateMarket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMarket.Unmarshal(m, b)
}
func (m *UpdateMarket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMarket.Marshal(b, m, deterministic)
}
func (m *UpdateMarket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMarket.Merge(m, src)
}
func (m *UpdateMarket) XXX_Size() int {
	return xxx_messageInfo_UpdateMarket.Size(m)
}
func (m *UpdateMarket) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMarket.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMarket proto.InternalMessageInfo

type NewMarket struct {
	Changes              *Market  `protobuf:"bytes,1,opt,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewMarket) Reset()         { *m = NewMarket{} }
func (m *NewMarket) String() string { return proto.CompactTextString(m) }
func (*NewMarket) ProtoMessage()    {}
func (*NewMarket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{12}
}

func (m *NewMarket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewMarket.Unmarshal(m, b)
}
func (m *NewMarket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewMarket.Marshal(b, m, deterministic)
}
func (m *NewMarket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewMarket.Merge(m, src)
}
func (m *NewMarket) XXX_Size() int {
	return xxx_messageInfo_NewMarket.Size(m)
}
func (m *NewMarket) XXX_DiscardUnknown() {
	xxx_messageInfo_NewMarket.DiscardUnknown(m)
}

var xxx_messageInfo_NewMarket proto.InternalMessageInfo

func (m *NewMarket) GetChanges() *Market {
	if m != nil {
		return m.Changes
	}
	return nil
}

type UpdateNetwork struct {
	Changes              *NetworkConfiguration `protobuf:"bytes,1,opt,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateNetwork) Reset()         { *m = UpdateNetwork{} }
func (m *UpdateNetwork) String() string { return proto.CompactTextString(m) }
func (*UpdateNetwork) ProtoMessage()    {}
func (*UpdateNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{13}
}

func (m *UpdateNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNetwork.Unmarshal(m, b)
}
func (m *UpdateNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNetwork.Marshal(b, m, deterministic)
}
func (m *UpdateNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNetwork.Merge(m, src)
}
func (m *UpdateNetwork) XXX_Size() int {
	return xxx_messageInfo_UpdateNetwork.Size(m)
}
func (m *UpdateNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNetwork proto.InternalMessageInfo

func (m *UpdateNetwork) GetChanges() *NetworkConfiguration {
	if m != nil {
		return m.Changes
	}
	return nil
}

// To be implemented
type NewAsset struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAsset) Reset()         { *m = NewAsset{} }
func (m *NewAsset) String() string { return proto.CompactTextString(m) }
func (*NewAsset) ProtoMessage()    {}
func (*NewAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{14}
}

func (m *NewAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAsset.Unmarshal(m, b)
}
func (m *NewAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAsset.Marshal(b, m, deterministic)
}
func (m *NewAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAsset.Merge(m, src)
}
func (m *NewAsset) XXX_Size() int {
	return xxx_messageInfo_NewAsset.Size(m)
}
func (m *NewAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAsset.DiscardUnknown(m)
}

var xxx_messageInfo_NewAsset proto.InternalMessageInfo

func (m *NewAsset) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type ProposalTerms struct {
	ClosingTimestamp      int64  `protobuf:"varint,1,opt,name=closingTimestamp,proto3" json:"closingTimestamp,omitempty"`
	EnactmentTimestamp    int64  `protobuf:"varint,2,opt,name=enactmentTimestamp,proto3" json:"enactmentTimestamp,omitempty"`
	MinParticipationStake uint64 `protobuf:"varint,3,opt,name=minParticipationStake,proto3" json:"minParticipationStake,omitempty"`
	// Types that are valid to be assigned to Change:
	//	*ProposalTerms_UpdateMarket
	//	*ProposalTerms_NewMarket
	//	*ProposalTerms_UpdateNetwork
	//	*ProposalTerms_NewAsset
	Change               isProposalTerms_Change `protobuf_oneof:"change"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ProposalTerms) Reset()         { *m = ProposalTerms{} }
func (m *ProposalTerms) String() string { return proto.CompactTextString(m) }
func (*ProposalTerms) ProtoMessage()    {}
func (*ProposalTerms) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{15}
}

func (m *ProposalTerms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalTerms.Unmarshal(m, b)
}
func (m *ProposalTerms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalTerms.Marshal(b, m, deterministic)
}
func (m *ProposalTerms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalTerms.Merge(m, src)
}
func (m *ProposalTerms) XXX_Size() int {
	return xxx_messageInfo_ProposalTerms.Size(m)
}
func (m *ProposalTerms) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalTerms.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalTerms proto.InternalMessageInfo

func (m *ProposalTerms) GetClosingTimestamp() int64 {
	if m != nil {
		return m.ClosingTimestamp
	}
	return 0
}

func (m *ProposalTerms) GetEnactmentTimestamp() int64 {
	if m != nil {
		return m.EnactmentTimestamp
	}
	return 0
}

func (m *ProposalTerms) GetMinParticipationStake() uint64 {
	if m != nil {
		return m.MinParticipationStake
	}
	return 0
}

type isProposalTerms_Change interface {
	isProposalTerms_Change()
}

type ProposalTerms_UpdateMarket struct {
	UpdateMarket *UpdateMarket `protobuf:"bytes,101,opt,name=updateMarket,proto3,oneof"`
}

type ProposalTerms_NewMarket struct {
	NewMarket *NewMarket `protobuf:"bytes,102,opt,name=newMarket,proto3,oneof"`
}

type ProposalTerms_UpdateNetwork struct {
	UpdateNetwork *UpdateNetwork `protobuf:"bytes,103,opt,name=updateNetwork,proto3,oneof"`
}

type ProposalTerms_NewAsset struct {
	NewAsset *NewAsset `protobuf:"bytes,104,opt,name=newAsset,proto3,oneof"`
}

func (*ProposalTerms_UpdateMarket) isProposalTerms_Change() {}

func (*ProposalTerms_NewMarket) isProposalTerms_Change() {}

func (*ProposalTerms_UpdateNetwork) isProposalTerms_Change() {}

func (*ProposalTerms_NewAsset) isProposalTerms_Change() {}

func (m *ProposalTerms) GetChange() isProposalTerms_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (m *ProposalTerms) GetUpdateMarket() *UpdateMarket {
	if x, ok := m.GetChange().(*ProposalTerms_UpdateMarket); ok {
		return x.UpdateMarket
	}
	return nil
}

func (m *ProposalTerms) GetNewMarket() *NewMarket {
	if x, ok := m.GetChange().(*ProposalTerms_NewMarket); ok {
		return x.NewMarket
	}
	return nil
}

func (m *ProposalTerms) GetUpdateNetwork() *UpdateNetwork {
	if x, ok := m.GetChange().(*ProposalTerms_UpdateNetwork); ok {
		return x.UpdateNetwork
	}
	return nil
}

func (m *ProposalTerms) GetNewAsset() *NewAsset {
	if x, ok := m.GetChange().(*ProposalTerms_NewAsset); ok {
		return x.NewAsset
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ProposalTerms) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ProposalTerms_UpdateMarket)(nil),
		(*ProposalTerms_NewMarket)(nil),
		(*ProposalTerms_UpdateNetwork)(nil),
		(*ProposalTerms_NewAsset)(nil),
	}
}

type ProposalVote struct {
	Proposal             *Proposal `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	Yes                  []*Vote   `protobuf:"bytes,2,rep,name=yes,proto3" json:"yes,omitempty"`
	No                   []*Vote   `protobuf:"bytes,3,rep,name=no,proto3" json:"no,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProposalVote) Reset()         { *m = ProposalVote{} }
func (m *ProposalVote) String() string { return proto.CompactTextString(m) }
func (*ProposalVote) ProtoMessage()    {}
func (*ProposalVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{16}
}

func (m *ProposalVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalVote.Unmarshal(m, b)
}
func (m *ProposalVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalVote.Marshal(b, m, deterministic)
}
func (m *ProposalVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalVote.Merge(m, src)
}
func (m *ProposalVote) XXX_Size() int {
	return xxx_messageInfo_ProposalVote.Size(m)
}
func (m *ProposalVote) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalVote.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalVote proto.InternalMessageInfo

func (m *ProposalVote) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *ProposalVote) GetYes() []*Vote {
	if m != nil {
		return m.Yes
	}
	return nil
}

func (m *ProposalVote) GetNo() []*Vote {
	if m != nil {
		return m.No
	}
	return nil
}

type Proposal struct {
	ID                   string         `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Reference            string         `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	PartyID              string         `protobuf:"bytes,3,opt,name=partyID,proto3" json:"partyID,omitempty"`
	State                Proposal_State `protobuf:"varint,4,opt,name=state,proto3,enum=types.Proposal_State" json:"state,omitempty"`
	Timestamp            int64          `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Terms                *ProposalTerms `protobuf:"bytes,6,opt,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Proposal) Reset()         { *m = Proposal{} }
func (m *Proposal) String() string { return proto.CompactTextString(m) }
func (*Proposal) ProtoMessage()    {}
func (*Proposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{17}
}

func (m *Proposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proposal.Unmarshal(m, b)
}
func (m *Proposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proposal.Marshal(b, m, deterministic)
}
func (m *Proposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proposal.Merge(m, src)
}
func (m *Proposal) XXX_Size() int {
	return xxx_messageInfo_Proposal.Size(m)
}
func (m *Proposal) XXX_DiscardUnknown() {
	xxx_messageInfo_Proposal.DiscardUnknown(m)
}

var xxx_messageInfo_Proposal proto.InternalMessageInfo

func (m *Proposal) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Proposal) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *Proposal) GetPartyID() string {
	if m != nil {
		return m.PartyID
	}
	return ""
}

func (m *Proposal) GetState() Proposal_State {
	if m != nil {
		return m.State
	}
	return Proposal_FAILED
}

func (m *Proposal) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Proposal) GetTerms() *ProposalTerms {
	if m != nil {
		return m.Terms
	}
	return nil
}

type ContinuousTrading struct {
	TickSize             uint64   `protobuf:"varint,1,opt,name=tickSize,proto3" json:"tickSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContinuousTrading) Reset()         { *m = ContinuousTrading{} }
func (m *ContinuousTrading) String() string { return proto.CompactTextString(m) }
func (*ContinuousTrading) ProtoMessage()    {}
func (*ContinuousTrading) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{18}
}

func (m *ContinuousTrading) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContinuousTrading.Unmarshal(m, b)
}
func (m *ContinuousTrading) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContinuousTrading.Marshal(b, m, deterministic)
}
func (m *ContinuousTrading) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContinuousTrading.Merge(m, src)
}
func (m *ContinuousTrading) XXX_Size() int {
	return xxx_messageInfo_ContinuousTrading.Size(m)
}
func (m *ContinuousTrading) XXX_DiscardUnknown() {
	xxx_messageInfo_ContinuousTrading.DiscardUnknown(m)
}

var xxx_messageInfo_ContinuousTrading proto.InternalMessageInfo

func (m *ContinuousTrading) GetTickSize() uint64 {
	if m != nil {
		return m.TickSize
	}
	return 0
}

type DiscreteTrading struct {
	Duration             int64    `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscreteTrading) Reset()         { *m = DiscreteTrading{} }
func (m *DiscreteTrading) String() string { return proto.CompactTextString(m) }
func (*DiscreteTrading) ProtoMessage()    {}
func (*DiscreteTrading) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{19}
}

func (m *DiscreteTrading) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscreteTrading.Unmarshal(m, b)
}
func (m *DiscreteTrading) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscreteTrading.Marshal(b, m, deterministic)
}
func (m *DiscreteTrading) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscreteTrading.Merge(m, src)
}
func (m *DiscreteTrading) XXX_Size() int {
	return xxx_messageInfo_DiscreteTrading.Size(m)
}
func (m *DiscreteTrading) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscreteTrading.DiscardUnknown(m)
}

var xxx_messageInfo_DiscreteTrading proto.InternalMessageInfo

func (m *DiscreteTrading) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type Future struct {
	Maturity string `protobuf:"bytes,1,opt,name=maturity,proto3" json:"maturity,omitempty"`
	Asset    string `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	// Types that are valid to be assigned to Oracle:
	//	*Future_EthereumEvent
	Oracle               isFuture_Oracle `protobuf_oneof:"oracle"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Future) Reset()         { *m = Future{} }
func (m *Future) String() string { return proto.CompactTextString(m) }
func (*Future) ProtoMessage()    {}
func (*Future) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{20}
}

func (m *Future) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Future.Unmarshal(m, b)
}
func (m *Future) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Future.Marshal(b, m, deterministic)
}
func (m *Future) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Future.Merge(m, src)
}
func (m *Future) XXX_Size() int {
	return xxx_messageInfo_Future.Size(m)
}
func (m *Future) XXX_DiscardUnknown() {
	xxx_messageInfo_Future.DiscardUnknown(m)
}

var xxx_messageInfo_Future proto.InternalMessageInfo

func (m *Future) GetMaturity() string {
	if m != nil {
		return m.Maturity
	}
	return ""
}

func (m *Future) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type isFuture_Oracle interface {
	isFuture_Oracle()
}

type Future_EthereumEvent struct {
	EthereumEvent *EthereumEvent `protobuf:"bytes,100,opt,name=ethereumEvent,proto3,oneof"`
}

func (*Future_EthereumEvent) isFuture_Oracle() {}

func (m *Future) GetOracle() isFuture_Oracle {
	if m != nil {
		return m.Oracle
	}
	return nil
}

func (m *Future) GetEthereumEvent() *EthereumEvent {
	if x, ok := m.GetOracle().(*Future_EthereumEvent); ok {
		return x.EthereumEvent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Future) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Future_EthereumEvent)(nil),
	}
}

type EthereumEvent struct {
	ContractID           string   `protobuf:"bytes,1,opt,name=contractID,proto3" json:"contractID,omitempty"`
	Event                string   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Value                uint64   `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumEvent) Reset()         { *m = EthereumEvent{} }
func (m *EthereumEvent) String() string { return proto.CompactTextString(m) }
func (*EthereumEvent) ProtoMessage()    {}
func (*EthereumEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{21}
}

func (m *EthereumEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumEvent.Unmarshal(m, b)
}
func (m *EthereumEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumEvent.Marshal(b, m, deterministic)
}
func (m *EthereumEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumEvent.Merge(m, src)
}
func (m *EthereumEvent) XXX_Size() int {
	return xxx_messageInfo_EthereumEvent.Size(m)
}
func (m *EthereumEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumEvent.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumEvent proto.InternalMessageInfo

func (m *EthereumEvent) GetContractID() string {
	if m != nil {
		return m.ContractID
	}
	return ""
}

func (m *EthereumEvent) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *EthereumEvent) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type InstrumentMetadata struct {
	Tags                 []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstrumentMetadata) Reset()         { *m = InstrumentMetadata{} }
func (m *InstrumentMetadata) String() string { return proto.CompactTextString(m) }
func (*InstrumentMetadata) ProtoMessage()    {}
func (*InstrumentMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{22}
}

func (m *InstrumentMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstrumentMetadata.Unmarshal(m, b)
}
func (m *InstrumentMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstrumentMetadata.Marshal(b, m, deterministic)
}
func (m *InstrumentMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstrumentMetadata.Merge(m, src)
}
func (m *InstrumentMetadata) XXX_Size() int {
	return xxx_messageInfo_InstrumentMetadata.Size(m)
}
func (m *InstrumentMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_InstrumentMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_InstrumentMetadata proto.InternalMessageInfo

func (m *InstrumentMetadata) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Instrument struct {
	Id               string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code             string              `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name             string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	BaseName         string              `protobuf:"bytes,4,opt,name=baseName,proto3" json:"baseName,omitempty"`
	QuoteName        string              `protobuf:"bytes,5,opt,name=quoteName,proto3" json:"quoteName,omitempty"`
	Metadata         *InstrumentMetadata `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	InitialMarkPrice uint64              `protobuf:"varint,7,opt,name=initialMarkPrice,proto3" json:"initialMarkPrice,omitempty"`
	// Types that are valid to be assigned to Product:
	//	*Instrument_Future
	Product              isInstrument_Product `protobuf_oneof:"product"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Instrument) Reset()         { *m = Instrument{} }
func (m *Instrument) String() string { return proto.CompactTextString(m) }
func (*Instrument) ProtoMessage()    {}
func (*Instrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{23}
}

func (m *Instrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instrument.Unmarshal(m, b)
}
func (m *Instrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instrument.Marshal(b, m, deterministic)
}
func (m *Instrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instrument.Merge(m, src)
}
func (m *Instrument) XXX_Size() int {
	return xxx_messageInfo_Instrument.Size(m)
}
func (m *Instrument) XXX_DiscardUnknown() {
	xxx_messageInfo_Instrument.DiscardUnknown(m)
}

var xxx_messageInfo_Instrument proto.InternalMessageInfo

func (m *Instrument) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instrument) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Instrument) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instrument) GetBaseName() string {
	if m != nil {
		return m.BaseName
	}
	return ""
}

func (m *Instrument) GetQuoteName() string {
	if m != nil {
		return m.QuoteName
	}
	return ""
}

func (m *Instrument) GetMetadata() *InstrumentMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Instrument) GetInitialMarkPrice() uint64 {
	if m != nil {
		return m.InitialMarkPrice
	}
	return 0
}

type isInstrument_Product interface {
	isInstrument_Product()
}

type Instrument_Future struct {
	Future *Future `protobuf:"bytes,100,opt,name=future,proto3,oneof"`
}

func (*Instrument_Future) isInstrument_Product() {}

func (m *Instrument) GetProduct() isInstrument_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *Instrument) GetFuture() *Future {
	if x, ok := m.GetProduct().(*Instrument_Future); ok {
		return x.Future
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Instrument) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Instrument_Future)(nil),
	}
}

type LogNormalRiskModel struct {
	RiskAversionParameter float64               `protobuf:"fixed64,1,opt,name=riskAversionParameter,proto3" json:"riskAversionParameter,omitempty"`
	Tau                   float64               `protobuf:"fixed64,2,opt,name=tau,proto3" json:"tau,omitempty"`
	Params                *LogNormalModelParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *LogNormalRiskModel) Reset()         { *m = LogNormalRiskModel{} }
func (m *LogNormalRiskModel) String() string { return proto.CompactTextString(m) }
func (*LogNormalRiskModel) ProtoMessage()    {}
func (*LogNormalRiskModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{24}
}

func (m *LogNormalRiskModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogNormalRiskModel.Unmarshal(m, b)
}
func (m *LogNormalRiskModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogNormalRiskModel.Marshal(b, m, deterministic)
}
func (m *LogNormalRiskModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogNormalRiskModel.Merge(m, src)
}
func (m *LogNormalRiskModel) XXX_Size() int {
	return xxx_messageInfo_LogNormalRiskModel.Size(m)
}
func (m *LogNormalRiskModel) XXX_DiscardUnknown() {
	xxx_messageInfo_LogNormalRiskModel.DiscardUnknown(m)
}

var xxx_messageInfo_LogNormalRiskModel proto.InternalMessageInfo

func (m *LogNormalRiskModel) GetRiskAversionParameter() float64 {
	if m != nil {
		return m.RiskAversionParameter
	}
	return 0
}

func (m *LogNormalRiskModel) GetTau() float64 {
	if m != nil {
		return m.Tau
	}
	return 0
}

func (m *LogNormalRiskModel) GetParams() *LogNormalModelParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type LogNormalModelParams struct {
	Mu                   float64  `protobuf:"fixed64,1,opt,name=mu,proto3" json:"mu,omitempty"`
	R                    float64  `protobuf:"fixed64,2,opt,name=r,proto3" json:"r,omitempty"`
	Sigma                float64  `protobuf:"fixed64,3,opt,name=sigma,proto3" json:"sigma,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogNormalModelParams) Reset()         { *m = LogNormalModelParams{} }
func (m *LogNormalModelParams) String() string { return proto.CompactTextString(m) }
func (*LogNormalModelParams) ProtoMessage()    {}
func (*LogNormalModelParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{25}
}

func (m *LogNormalModelParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogNormalModelParams.Unmarshal(m, b)
}
func (m *LogNormalModelParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogNormalModelParams.Marshal(b, m, deterministic)
}
func (m *LogNormalModelParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogNormalModelParams.Merge(m, src)
}
func (m *LogNormalModelParams) XXX_Size() int {
	return xxx_messageInfo_LogNormalModelParams.Size(m)
}
func (m *LogNormalModelParams) XXX_DiscardUnknown() {
	xxx_messageInfo_LogNormalModelParams.DiscardUnknown(m)
}

var xxx_messageInfo_LogNormalModelParams proto.InternalMessageInfo

func (m *LogNormalModelParams) GetMu() float64 {
	if m != nil {
		return m.Mu
	}
	return 0
}

func (m *LogNormalModelParams) GetR() float64 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *LogNormalModelParams) GetSigma() float64 {
	if m != nil {
		return m.Sigma
	}
	return 0
}

type SimpleRiskModel struct {
	Params               *SimpleModelParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SimpleRiskModel) Reset()         { *m = SimpleRiskModel{} }
func (m *SimpleRiskModel) String() string { return proto.CompactTextString(m) }
func (*SimpleRiskModel) ProtoMessage()    {}
func (*SimpleRiskModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{26}
}

func (m *SimpleRiskModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleRiskModel.Unmarshal(m, b)
}
func (m *SimpleRiskModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleRiskModel.Marshal(b, m, deterministic)
}
func (m *SimpleRiskModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleRiskModel.Merge(m, src)
}
func (m *SimpleRiskModel) XXX_Size() int {
	return xxx_messageInfo_SimpleRiskModel.Size(m)
}
func (m *SimpleRiskModel) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleRiskModel.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleRiskModel proto.InternalMessageInfo

func (m *SimpleRiskModel) GetParams() *SimpleModelParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type SimpleModelParams struct {
	FactorLong           float64  `protobuf:"fixed64,1,opt,name=factorLong,proto3" json:"factorLong,omitempty"`
	FactorShort          float64  `protobuf:"fixed64,2,opt,name=factorShort,proto3" json:"factorShort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleModelParams) Reset()         { *m = SimpleModelParams{} }
func (m *SimpleModelParams) String() string { return proto.CompactTextString(m) }
func (*SimpleModelParams) ProtoMessage()    {}
func (*SimpleModelParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{27}
}

func (m *SimpleModelParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleModelParams.Unmarshal(m, b)
}
func (m *SimpleModelParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleModelParams.Marshal(b, m, deterministic)
}
func (m *SimpleModelParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleModelParams.Merge(m, src)
}
func (m *SimpleModelParams) XXX_Size() int {
	return xxx_messageInfo_SimpleModelParams.Size(m)
}
func (m *SimpleModelParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleModelParams.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleModelParams proto.InternalMessageInfo

func (m *SimpleModelParams) GetFactorLong() float64 {
	if m != nil {
		return m.FactorLong
	}
	return 0
}

func (m *SimpleModelParams) GetFactorShort() float64 {
	if m != nil {
		return m.FactorShort
	}
	return 0
}

type ExternalRiskModel struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Socket               string            `protobuf:"bytes,2,opt,name=socket,proto3" json:"socket,omitempty"`
	Config               map[string]string `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ExternalRiskModel) Reset()         { *m = ExternalRiskModel{} }
func (m *ExternalRiskModel) String() string { return proto.CompactTextString(m) }
func (*ExternalRiskModel) ProtoMessage()    {}
func (*ExternalRiskModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{28}
}

func (m *ExternalRiskModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalRiskModel.Unmarshal(m, b)
}
func (m *ExternalRiskModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalRiskModel.Marshal(b, m, deterministic)
}
func (m *ExternalRiskModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalRiskModel.Merge(m, src)
}
func (m *ExternalRiskModel) XXX_Size() int {
	return xxx_messageInfo_ExternalRiskModel.Size(m)
}
func (m *ExternalRiskModel) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalRiskModel.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalRiskModel proto.InternalMessageInfo

func (m *ExternalRiskModel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExternalRiskModel) GetSocket() string {
	if m != nil {
		return m.Socket
	}
	return ""
}

func (m *ExternalRiskModel) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

type ScalingFactors struct {
	SearchLevel          float64  `protobuf:"fixed64,1,opt,name=searchLevel,proto3" json:"searchLevel,omitempty"`
	InitialMargin        float64  `protobuf:"fixed64,2,opt,name=initialMargin,proto3" json:"initialMargin,omitempty"`
	CollateralRelease    float64  `protobuf:"fixed64,3,opt,name=collateralRelease,proto3" json:"collateralRelease,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScalingFactors) Reset()         { *m = ScalingFactors{} }
func (m *ScalingFactors) String() string { return proto.CompactTextString(m) }
func (*ScalingFactors) ProtoMessage()    {}
func (*ScalingFactors) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{29}
}

func (m *ScalingFactors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScalingFactors.Unmarshal(m, b)
}
func (m *ScalingFactors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScalingFactors.Marshal(b, m, deterministic)
}
func (m *ScalingFactors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScalingFactors.Merge(m, src)
}
func (m *ScalingFactors) XXX_Size() int {
	return xxx_messageInfo_ScalingFactors.Size(m)
}
func (m *ScalingFactors) XXX_DiscardUnknown() {
	xxx_messageInfo_ScalingFactors.DiscardUnknown(m)
}

var xxx_messageInfo_ScalingFactors proto.InternalMessageInfo

func (m *ScalingFactors) GetSearchLevel() float64 {
	if m != nil {
		return m.SearchLevel
	}
	return 0
}

func (m *ScalingFactors) GetInitialMargin() float64 {
	if m != nil {
		return m.InitialMargin
	}
	return 0
}

func (m *ScalingFactors) GetCollateralRelease() float64 {
	if m != nil {
		return m.CollateralRelease
	}
	return 0
}

type MarginCalculator struct {
	ScalingFactors       *ScalingFactors `protobuf:"bytes,1,opt,name=scalingFactors,proto3" json:"scalingFactors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MarginCalculator) Reset()         { *m = MarginCalculator{} }
func (m *MarginCalculator) String() string { return proto.CompactTextString(m) }
func (*MarginCalculator) ProtoMessage()    {}
func (*MarginCalculator) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{30}
}

func (m *MarginCalculator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarginCalculator.Unmarshal(m, b)
}
func (m *MarginCalculator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarginCalculator.Marshal(b, m, deterministic)
}
func (m *MarginCalculator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarginCalculator.Merge(m, src)
}
func (m *MarginCalculator) XXX_Size() int {
	return xxx_messageInfo_MarginCalculator.Size(m)
}
func (m *MarginCalculator) XXX_DiscardUnknown() {
	xxx_messageInfo_MarginCalculator.DiscardUnknown(m)
}

var xxx_messageInfo_MarginCalculator proto.InternalMessageInfo

func (m *MarginCalculator) GetScalingFactors() *ScalingFactors {
	if m != nil {
		return m.ScalingFactors
	}
	return nil
}

type TradableInstrument struct {
	Instrument       *Instrument       `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	MarginCalculator *MarginCalculator `protobuf:"bytes,2,opt,name=marginCalculator,proto3" json:"marginCalculator,omitempty"`
	// Types that are valid to be assigned to RiskModel:
	//	*TradableInstrument_LogNormalRiskModel
	//	*TradableInstrument_ExternalRiskModel
	//	*TradableInstrument_SimpleRiskModel
	RiskModel            isTradableInstrument_RiskModel `protobuf_oneof:"riskModel"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TradableInstrument) Reset()         { *m = TradableInstrument{} }
func (m *TradableInstrument) String() string { return proto.CompactTextString(m) }
func (*TradableInstrument) ProtoMessage()    {}
func (*TradableInstrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{31}
}

func (m *TradableInstrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradableInstrument.Unmarshal(m, b)
}
func (m *TradableInstrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradableInstrument.Marshal(b, m, deterministic)
}
func (m *TradableInstrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradableInstrument.Merge(m, src)
}
func (m *TradableInstrument) XXX_Size() int {
	return xxx_messageInfo_TradableInstrument.Size(m)
}
func (m *TradableInstrument) XXX_DiscardUnknown() {
	xxx_messageInfo_TradableInstrument.DiscardUnknown(m)
}

var xxx_messageInfo_TradableInstrument proto.InternalMessageInfo

func (m *TradableInstrument) GetInstrument() *Instrument {
	if m != nil {
		return m.Instrument
	}
	return nil
}

func (m *TradableInstrument) GetMarginCalculator() *MarginCalculator {
	if m != nil {
		return m.MarginCalculator
	}
	return nil
}

type isTradableInstrument_RiskModel interface {
	isTradableInstrument_RiskModel()
}

type TradableInstrument_LogNormalRiskModel struct {
	LogNormalRiskModel *LogNormalRiskModel `protobuf:"bytes,100,opt,name=logNormalRiskModel,proto3,oneof"`
}

type TradableInstrument_ExternalRiskModel struct {
	ExternalRiskModel *ExternalRiskModel `protobuf:"bytes,101,opt,name=externalRiskModel,proto3,oneof"`
}

type TradableInstrument_SimpleRiskModel struct {
	SimpleRiskModel *SimpleRiskModel `protobuf:"bytes,102,opt,name=simpleRiskModel,proto3,oneof"`
}

func (*TradableInstrument_LogNormalRiskModel) isTradableInstrument_RiskModel() {}

func (*TradableInstrument_ExternalRiskModel) isTradableInstrument_RiskModel() {}

func (*TradableInstrument_SimpleRiskModel) isTradableInstrument_RiskModel() {}

func (m *TradableInstrument) GetRiskModel() isTradableInstrument_RiskModel {
	if m != nil {
		return m.RiskModel
	}
	return nil
}

func (m *TradableInstrument) GetLogNormalRiskModel() *LogNormalRiskModel {
	if x, ok := m.GetRiskModel().(*TradableInstrument_LogNormalRiskModel); ok {
		return x.LogNormalRiskModel
	}
	return nil
}

func (m *TradableInstrument) GetExternalRiskModel() *ExternalRiskModel {
	if x, ok := m.GetRiskModel().(*TradableInstrument_ExternalRiskModel); ok {
		return x.ExternalRiskModel
	}
	return nil
}

func (m *TradableInstrument) GetSimpleRiskModel() *SimpleRiskModel {
	if x, ok := m.GetRiskModel().(*TradableInstrument_SimpleRiskModel); ok {
		return x.SimpleRiskModel
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TradableInstrument) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TradableInstrument_LogNormalRiskModel)(nil),
		(*TradableInstrument_ExternalRiskModel)(nil),
		(*TradableInstrument_SimpleRiskModel)(nil),
	}
}

type Market struct {
	// 32 pseudo-random upper-case letters and digits
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// a human-understandable name for the Market, perhaps including a currency pair and a maturity date
	Name               string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TradableInstrument *TradableInstrument `protobuf:"bytes,3,opt,name=tradableInstrument,proto3" json:"tradableInstrument,omitempty"`
	// the number of decimal places that a price must be shifted by in order to get a correct price denominated in the currency of the Market. ie `realPrice = price / 10^decimalPlaces`
	DecimalPlaces uint64 `protobuf:"varint,4,opt,name=decimalPlaces,proto3" json:"decimalPlaces,omitempty"`
	// Types that are valid to be assigned to TradingMode:
	//	*Market_Continuous
	//	*Market_Discrete
	TradingMode          isMarket_TradingMode `protobuf_oneof:"tradingMode"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Market) Reset()         { *m = Market{} }
func (m *Market) String() string { return proto.CompactTextString(m) }
func (*Market) ProtoMessage()    {}
func (*Market) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2f027f54ad4521e, []int{32}
}

func (m *Market) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Market.Unmarshal(m, b)
}
func (m *Market) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Market.Marshal(b, m, deterministic)
}
func (m *Market) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Market.Merge(m, src)
}
func (m *Market) XXX_Size() int {
	return xxx_messageInfo_Market.Size(m)
}
func (m *Market) XXX_DiscardUnknown() {
	xxx_messageInfo_Market.DiscardUnknown(m)
}

var xxx_messageInfo_Market proto.InternalMessageInfo

func (m *Market) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Market) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Market) GetTradableInstrument() *TradableInstrument {
	if m != nil {
		return m.TradableInstrument
	}
	return nil
}

func (m *Market) GetDecimalPlaces() uint64 {
	if m != nil {
		return m.DecimalPlaces
	}
	return 0
}

type isMarket_TradingMode interface {
	isMarket_TradingMode()
}

type Market_Continuous struct {
	Continuous *ContinuousTrading `protobuf:"bytes,100,opt,name=continuous,proto3,oneof"`
}

type Market_Discrete struct {
	Discrete *DiscreteTrading `protobuf:"bytes,101,opt,name=discrete,proto3,oneof"`
}

func (*Market_Continuous) isMarket_TradingMode() {}

func (*Market_Discrete) isMarket_TradingMode() {}

func (m *Market) GetTradingMode() isMarket_TradingMode {
	if m != nil {
		return m.TradingMode
	}
	return nil
}

func (m *Market) GetContinuous() *ContinuousTrading {
	if x, ok := m.GetTradingMode().(*Market_Continuous); ok {
		return x.Continuous
	}
	return nil
}

func (m *Market) GetDiscrete() *DiscreteTrading {
	if x, ok := m.GetTradingMode().(*Market_Discrete); ok {
		return x.Discrete
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Market) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Market_Continuous)(nil),
		(*Market_Discrete)(nil),
	}
}

func init() {
	proto.RegisterEnum("types.Side", Side_name, Side_value)
	proto.RegisterEnum("types.OrderError", OrderError_name, OrderError_value)
	proto.RegisterEnum("types.Order_TimeInForce", Order_TimeInForce_name, Order_TimeInForce_value)
	proto.RegisterEnum("types.Order_Type", Order_Type_name, Order_Type_value)
	proto.RegisterEnum("types.Order_Status", Order_Status_name, Order_Status_value)
	proto.RegisterEnum("types.Vote_Value", Vote_Value_name, Vote_Value_value)
	proto.RegisterEnum("types.Proposal_State", Proposal_State_name, Proposal_State_value)
	proto.RegisterType((*SignedBundle)(nil), "types.SignedBundle")
	proto.RegisterType((*OrderSubmission)(nil), "types.OrderSubmission")
	proto.RegisterType((*OrderCancellation)(nil), "types.OrderCancellation")
	proto.RegisterType((*NotifyTraderAccount)(nil), "types.NotifyTraderAccount")
	proto.RegisterType((*Withdraw)(nil), "types.Withdraw")
	proto.RegisterType((*OrderAmendment)(nil), "types.OrderAmendment")
	proto.RegisterType((*NodeRegistration)(nil), "types.NodeRegistration")
	proto.RegisterType((*NodeVote)(nil), "types.NodeVote")
	proto.RegisterType((*Order)(nil), "types.Order")
	proto.RegisterType((*Vote)(nil), "types.Vote")
	proto.RegisterType((*NetworkConfiguration)(nil), "types.NetworkConfiguration")
	proto.RegisterType((*UpdateMarket)(nil), "types.UpdateMarket")
	proto.RegisterType((*NewMarket)(nil), "types.NewMarket")
	proto.RegisterType((*UpdateNetwork)(nil), "types.UpdateNetwork")
	proto.RegisterType((*NewAsset)(nil), "types.NewAsset")
	proto.RegisterType((*ProposalTerms)(nil), "types.ProposalTerms")
	proto.RegisterType((*ProposalVote)(nil), "types.ProposalVote")
	proto.RegisterType((*Proposal)(nil), "types.Proposal")
	proto.RegisterType((*ContinuousTrading)(nil), "types.ContinuousTrading")
	proto.RegisterType((*DiscreteTrading)(nil), "types.DiscreteTrading")
	proto.RegisterType((*Future)(nil), "types.Future")
	proto.RegisterType((*EthereumEvent)(nil), "types.EthereumEvent")
	proto.RegisterType((*InstrumentMetadata)(nil), "types.InstrumentMetadata")
	proto.RegisterType((*Instrument)(nil), "types.Instrument")
	proto.RegisterType((*LogNormalRiskModel)(nil), "types.LogNormalRiskModel")
	proto.RegisterType((*LogNormalModelParams)(nil), "types.LogNormalModelParams")
	proto.RegisterType((*SimpleRiskModel)(nil), "types.SimpleRiskModel")
	proto.RegisterType((*SimpleModelParams)(nil), "types.SimpleModelParams")
	proto.RegisterType((*ExternalRiskModel)(nil), "types.ExternalRiskModel")
	proto.RegisterMapType((map[string]string)(nil), "types.ExternalRiskModel.ConfigEntry")
	proto.RegisterType((*ScalingFactors)(nil), "types.ScalingFactors")
	proto.RegisterType((*MarginCalculator)(nil), "types.MarginCalculator")
	proto.RegisterType((*TradableInstrument)(nil), "types.TradableInstrument")
	proto.RegisterType((*Market)(nil), "types.Market")
}

func init() { proto.RegisterFile("proto/types.proto", fileDescriptor_e2f027f54ad4521e) }

var fileDescriptor_e2f027f54ad4521e = []byte{
	// 2382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x4b, 0x93, 0xdb, 0xc6,
	0x11, 0x26, 0xc0, 0xc7, 0x92, 0xcd, 0x7d, 0x80, 0xa3, 0x87, 0x21, 0xc9, 0x89, 0x55, 0x28, 0xa7,
	0xbc, 0x91, 0xa3, 0x95, 0x2d, 0xdb, 0x55, 0xb1, 0xcb, 0xa9, 0x0a, 0x97, 0xc4, 0x6a, 0x61, 0x71,
	0xc1, 0xf5, 0x90, 0x2b, 0xc7, 0xce, 0x81, 0x35, 0x02, 0x46, 0x5c, 0x64, 0x41, 0x80, 0x19, 0x0c,
	0xb4, 0xda, 0x1c, 0xf3, 0xba, 0xe7, 0x90, 0x63, 0xf2, 0x3b, 0x72, 0xcd, 0x29, 0xd7, 0xfc, 0x92,
	0x9c, 0xf2, 0x03, 0x52, 0x33, 0x18, 0x80, 0x00, 0xb9, 0xab, 0xca, 0xeb, 0xc4, 0xe9, 0xc7, 0xf4,
	0xf4, 0x7c, 0xdd, 0x3d, 0xdd, 0x20, 0xf4, 0x96, 0x2c, 0xe6, 0xf1, 0x13, 0x7e, 0xb5, 0xa4, 0xc9,
	0x81, 0x5c, 0xa3, 0xa6, 0x24, 0x2c, 0x06, 0xdb, 0x93, 0x60, 0x1e, 0x51, 0xff, 0x30, 0x8d, 0xfc,
	0x90, 0x22, 0x04, 0x0d, 0x9f, 0x70, 0x62, 0x6a, 0x0f, 0xb5, 0xfd, 0x6d, 0x2c, 0xd7, 0xc8, 0x80,
	0x7a, 0x12, 0xcc, 0x4d, 0x5d, 0xb2, 0xc4, 0x12, 0xdd, 0x87, 0x2d, 0xe2, 0xfb, 0x8c, 0x26, 0x89,
	0x49, 0x05, 0xf7, 0xb8, 0x86, 0x73, 0x06, 0x32, 0xa1, 0xb5, 0x4c, 0x5f, 0x3e, 0xa7, 0x57, 0xe6,
	0x2b, 0x25, 0x52, 0xf4, 0x61, 0x0b, 0x1a, 0x24, 0xe5, 0xe7, 0xd6, 0x5f, 0x75, 0xd8, 0x1b, 0x33,
	0x9f, 0xb2, 0x49, 0xfa, 0x72, 0x11, 0x24, 0x49, 0x10, 0x47, 0x68, 0x17, 0xf4, 0xc0, 0x97, 0xa7,
	0x76, 0xb0, 0x1e, 0xf8, 0xe8, 0x3e, 0xb4, 0x17, 0x84, 0x5d, 0x50, 0xee, 0x0c, 0xe5, 0xc1, 0x1d,
	0x5c, 0xd0, 0xc8, 0x84, 0xad, 0x25, 0x61, 0xfc, 0xca, 0x19, 0x9a, 0x75, 0x29, 0xca, 0x49, 0x74,
	0x1b, 0x9a, 0x4b, 0x16, 0x78, 0xd4, 0x6c, 0x3c, 0xd4, 0xf6, 0x1b, 0x38, 0x23, 0xc4, 0x9d, 0x92,
	0xe0, 0x57, 0xd4, 0x6c, 0x4a, 0xa6, 0x5c, 0xa3, 0xf7, 0x04, 0xcf, 0xa7, 0x66, 0xeb, 0xa1, 0xb6,
	0xbf, 0xfb, 0xb4, 0x7b, 0x90, 0x41, 0x33, 0x09, 0x7c, 0x8a, 0xa5, 0x00, 0x7d, 0x01, 0x5d, 0x1e,
	0x2c, 0xa8, 0x13, 0x1d, 0xc5, 0xcc, 0xa3, 0xe6, 0x96, 0xd4, 0x33, 0x95, 0x9e, 0xf4, 0xfe, 0x60,
	0xba, 0x92, 0xe3, 0xb2, 0x32, 0x7a, 0x17, 0x3a, 0xf4, 0xcd, 0x32, 0x60, 0x34, 0xe9, 0x73, 0xb3,
	0xfd, 0x50, 0xdb, 0xaf, 0xe3, 0x15, 0x03, 0xfd, 0x00, 0x1a, 0xc2, 0x8a, 0xd9, 0x91, 0x26, 0x7b,
	0x55, 0x93, 0x57, 0x4b, 0x8a, 0xa5, 0x58, 0x18, 0x61, 0xf4, 0x15, 0x65, 0x34, 0xf2, 0xa8, 0x09,
	0xf2, 0x9e, 0x2b, 0x86, 0xe5, 0x41, 0x4f, 0xee, 0x18, 0x90, 0xc8, 0xa3, 0x61, 0x48, 0xb8, 0x00,
	0xd1, 0x84, 0xad, 0x58, 0x30, 0x9d, 0xa1, 0x42, 0x32, 0x27, 0xff, 0x3b, 0x38, 0x2d, 0x07, 0x6e,
	0xb9, 0x31, 0x0f, 0x5e, 0x5d, 0x4d, 0x19, 0xf1, 0x29, 0xeb, 0x7b, 0x5e, 0x9c, 0x46, 0x5c, 0x18,
	0xe3, 0x92, 0x51, 0x9c, 0x53, 0xd0, 0xe8, 0x2e, 0xb4, 0xc8, 0x42, 0x68, 0xc9, 0x63, 0x1a, 0x58,
	0x51, 0x16, 0x86, 0xf6, 0x37, 0x01, 0x3f, 0xf7, 0x19, 0xb9, 0x2c, 0x1f, 0xa8, 0x55, 0xe3, 0x77,
	0xc3, 0x6e, 0x11, 0x57, 0x92, 0x24, 0x94, 0x2b, 0x07, 0x33, 0xc2, 0xfa, 0x87, 0x06, 0xbb, 0x12,
	0x84, 0xfe, 0x82, 0x46, 0xfe, 0x82, 0x46, 0xfc, 0x2d, 0x08, 0x94, 0x0e, 0xd5, 0xab, 0x87, 0x96,
	0xb1, 0xa9, 0xaf, 0x61, 0x73, 0x7d, 0x42, 0xbd, 0x0b, 0x1d, 0x91, 0x44, 0x43, 0x1a, 0x72, 0x22,
	0xb3, 0xaa, 0x8e, 0x57, 0x8c, 0x6a, 0xf4, 0x5b, 0xeb, 0xd1, 0xff, 0x1f, 0xf2, 0xca, 0x7a, 0x04,
	0x86, 0x1b, 0xfb, 0x14, 0xd3, 0x79, 0x90, 0x70, 0x96, 0xc5, 0xfc, 0x6e, 0x51, 0x6e, 0xd9, 0x85,
	0x15, 0x65, 0xfd, 0x14, 0xda, 0x42, 0xf7, 0x45, 0xcc, 0xe9, 0x4d, 0x3a, 0xd5, 0x14, 0xd3, 0xd7,
	0x53, 0xec, 0xef, 0x4d, 0x68, 0x4a, 0x87, 0xfe, 0x4f, 0xc5, 0x99, 0x97, 0x5c, 0xe3, 0xa6, 0x92,
	0x2b, 0xc0, 0x6e, 0x5e, 0x57, 0xbd, 0xad, 0x52, 0xf5, 0x4a, 0xc7, 0x17, 0x24, 0x88, 0x82, 0x68,
	0x2e, 0x21, 0x6c, 0xe0, 0x15, 0x63, 0x1d, 0xe2, 0xf6, 0x7f, 0x52, 0xba, 0xff, 0x7e, 0x71, 0x7a,
	0x8c, 0x12, 0x4e, 0xfd, 0x3e, 0x97, 0xc5, 0x59, 0xc7, 0x2b, 0x06, 0xfa, 0x10, 0x5a, 0x09, 0x27,
	0x3c, 0x4d, 0xcc, 0xae, 0x34, 0x73, 0xab, 0x62, 0x66, 0x22, 0x45, 0x58, 0xa9, 0x54, 0xd3, 0x65,
	0x7b, 0x3d, 0x5d, 0x2a, 0x21, 0xda, 0x59, 0x0b, 0x11, 0xfa, 0x21, 0xb4, 0x18, 0x25, 0x49, 0x1c,
	0x99, 0xbb, 0x9b, 0xfe, 0xda, 0x8c, 0xc5, 0x0c, 0x2b, 0x05, 0x61, 0x28, 0x5d, 0xfa, 0xca, 0xe3,
	0xbd, 0xec, 0x98, 0x82, 0x21, 0xa2, 0xf6, 0x9a, 0x32, 0xf1, 0x12, 0x9b, 0x86, 0x84, 0x33, 0x27,
	0xad, 0x8f, 0xa1, 0x5b, 0x02, 0x0b, 0x6d, 0x41, 0xfd, 0xd9, 0x74, 0x60, 0xd4, 0xb2, 0xc5, 0xd4,
	0xd0, 0xc4, 0xc2, 0x19, 0x0f, 0x0c, 0x5d, 0x2c, 0x8e, 0xc6, 0xcf, 0x8d, 0xba, 0xf5, 0x08, 0x1a,
	0x02, 0x2a, 0xd4, 0x81, 0xe6, 0xc8, 0x39, 0x71, 0xa6, 0x46, 0x0d, 0x01, 0xb4, 0x4e, 0xfa, 0xf8,
	0xb9, 0x2d, 0x36, 0x74, 0x61, 0xcb, 0xb5, 0xa7, 0xdf, 0x8c, 0xf1, 0x73, 0x43, 0xb7, 0x42, 0x68,
	0x65, 0x78, 0x08, 0x95, 0xbe, 0xc7, 0x83, 0xd7, 0xd4, 0xa8, 0x09, 0x15, 0x5b, 0x42, 0xe0, 0x1b,
	0x1a, 0xda, 0x81, 0x8e, 0x7a, 0xe5, 0xa8, 0x6f, 0xe8, 0x42, 0x36, 0xe1, 0xf1, 0x72, 0x49, 0x7d,
	0xa3, 0x2e, 0x36, 0x1d, 0x05, 0x52, 0xd0, 0x40, 0xdb, 0xd0, 0xc6, 0xf4, 0x17, 0xd4, 0xe3, 0xd4,
	0x37, 0x9a, 0xe8, 0x16, 0xec, 0x9d, 0x12, 0xc6, 0x03, 0x12, 0x86, 0x57, 0x4a, 0xa5, 0x65, 0xfd,
	0x46, 0x83, 0x86, 0xac, 0x88, 0x9b, 0x9f, 0xa0, 0x0f, 0xa0, 0xf9, 0x9a, 0x84, 0x69, 0x56, 0x0f,
	0x2b, 0x44, 0xc5, 0xae, 0x83, 0x17, 0x42, 0x80, 0x33, 0x39, 0xfa, 0x3e, 0xc0, 0x92, 0xc5, 0xcb,
	0x38, 0x21, 0x61, 0x91, 0xeb, 0x25, 0x8e, 0x65, 0x42, 0x53, 0xea, 0xa3, 0x16, 0xe8, 0xee, 0x38,
	0x43, 0xec, 0x5b, 0x7b, 0x62, 0x68, 0xd6, 0x6f, 0x75, 0xb8, 0xed, 0x52, 0x7e, 0x19, 0xb3, 0x8b,
	0x41, 0x1c, 0xbd, 0x0a, 0xe6, 0xa9, 0xaa, 0xe5, 0x1f, 0x41, 0x6f, 0x11, 0x44, 0x83, 0x30, 0x4e,
	0xa8, 0x13, 0x4d, 0xa8, 0x17, 0x47, 0x7e, 0x22, 0xfd, 0xab, 0xe3, 0x4d, 0x81, 0xd4, 0x26, 0x6f,
	0xd6, 0xb4, 0x75, 0xa5, 0xbd, 0x2e, 0x50, 0xb6, 0xed, 0x88, 0x78, 0x7c, 0xa5, 0x5d, 0x2f, 0x6c,
	0x57, 0x05, 0xca, 0xf6, 0x9a, 0x76, 0xa3, 0xb0, 0xbd, 0xa6, 0xfd, 0x29, 0xdc, 0x59, 0x04, 0x91,
	0x84, 0xdb, 0x0b, 0x96, 0xf2, 0x2e, 0x13, 0x4e, 0x2e, 0xf2, 0x42, 0xbe, 0x5e, 0x68, 0xed, 0xc2,
	0xf6, 0x99, 0x4c, 0xc0, 0x13, 0xf9, 0x76, 0x58, 0x9f, 0x42, 0xc7, 0xa5, 0x97, 0x19, 0x81, 0x3e,
	0x80, 0x2d, 0xef, 0x9c, 0x44, 0x73, 0x9a, 0x01, 0xd0, 0x7d, 0xba, 0xa3, 0x02, 0x91, 0xc9, 0x71,
	0x2e, 0xb5, 0x8e, 0x60, 0x27, 0xb3, 0xa2, 0x10, 0x45, 0x9f, 0xad, 0xef, 0x7c, 0xa0, 0x76, 0x5e,
	0x07, 0xf9, 0xca, 0xce, 0x7d, 0x68, 0xbb, 0xf4, 0xb2, 0x2f, 0x1a, 0x8b, 0x78, 0xef, 0x8a, 0xc4,
	0xd0, 0x9d, 0xa1, 0xf5, 0xbb, 0x3a, 0xec, 0x9c, 0xaa, 0xc8, 0x4e, 0x29, 0x5b, 0x24, 0xe8, 0x11,
	0x18, 0x5e, 0x18, 0x27, 0x41, 0x34, 0x17, 0xc5, 0x91, 0x70, 0xb2, 0x58, 0xaa, 0x40, 0x6d, 0xf0,
	0xd1, 0x01, 0x20, 0x2a, 0xf0, 0x12, 0x0d, 0x6a, 0xa5, 0x9d, 0x05, 0xea, 0x1a, 0xc9, 0xcd, 0x68,
	0xd6, 0xdf, 0x82, 0x26, 0xfa, 0x1c, 0xb6, 0xd3, 0x12, 0x9a, 0x72, 0x2e, 0xeb, 0x16, 0x2f, 0x4f,
	0x19, 0xe8, 0xe3, 0x1a, 0xae, 0xa8, 0xa2, 0x8f, 0xa0, 0x13, 0xe5, 0xc0, 0xcb, 0xa1, 0xad, 0xfb,
	0xd4, 0x28, 0x30, 0xbb, 0x2c, 0x36, 0xad, 0x94, 0xd0, 0x97, 0xb0, 0x93, 0x96, 0x41, 0x37, 0xe7,
	0x72, 0xd7, 0xed, 0xca, 0x69, 0x4a, 0x76, 0x5c, 0xc3, 0x55, 0x65, 0xf4, 0x18, 0xda, 0x91, 0x82,
	0xda, 0x3c, 0x97, 0x1b, 0xf7, 0x56, 0xc7, 0x49, 0xf6, 0x71, 0x0d, 0x17, 0x2a, 0x87, 0x6d, 0x68,
	0x65, 0x41, 0xb2, 0x2e, 0x61, 0x3b, 0x0f, 0x83, 0xac, 0xe2, 0x0f, 0xa1, 0x9d, 0x17, 0x9c, 0x8a,
	0x75, 0x6e, 0x28, 0x57, 0xc3, 0x85, 0x02, 0xfa, 0x1e, 0xd4, 0xaf, 0xa8, 0x28, 0x90, 0xfa, 0x7e,
	0xb7, 0xe8, 0x3e, 0xc2, 0x0c, 0x16, 0x7c, 0xf4, 0x00, 0xf4, 0x28, 0x36, 0xeb, 0x9b, 0x52, 0x3d,
	0x8a, 0xad, 0x3f, 0xe9, 0xd0, 0xce, 0x4d, 0xae, 0x67, 0xc7, 0xdb, 0xbb, 0xe8, 0x5b, 0xfa, 0xe1,
	0x87, 0xd0, 0x14, 0x2d, 0x20, 0x6f, 0x88, 0x77, 0xd6, 0x5c, 0x97, 0x7d, 0x82, 0xe2, 0x4c, 0x47,
	0x1c, 0xc2, 0x8b, 0xdc, 0x51, 0x23, 0x47, 0xc1, 0x40, 0x8f, 0xa0, 0xc9, 0x45, 0x5e, 0xca, 0x26,
	0xb9, 0x8a, 0x43, 0x25, 0x67, 0x71, 0xa6, 0x62, 0x61, 0x68, 0x4a, 0xcb, 0xf2, 0xed, 0xec, 0x3b,
	0x23, 0x7b, 0x68, 0xd4, 0x50, 0x1b, 0x1a, 0xe3, 0x53, 0xdb, 0x35, 0x34, 0xc1, 0x3d, 0xed, 0x4f,
	0x26, 0xf6, 0xd0, 0xd0, 0xe5, 0x8b, 0x6a, 0x7f, 0x65, 0x0f, 0xa6, 0xf6, 0xd0, 0xa8, 0x0b, 0x6a,
	0x68, 0x0f, 0x46, 0x8e, 0x6b, 0x0f, 0x8d, 0x86, 0x7c, 0xa2, 0xdd, 0xbe, 0x14, 0x35, 0xad, 0x27,
	0xd0, 0x1b, 0xc4, 0x11, 0x0f, 0xa2, 0x34, 0x4e, 0x13, 0x31, 0x2c, 0x8a, 0x36, 0x2c, 0xc6, 0xc4,
	0xc0, 0xbb, 0x98, 0x88, 0xe6, 0xad, 0xc9, 0xd4, 0x2d, 0x68, 0xeb, 0x31, 0xec, 0x0d, 0x83, 0xc4,
	0x63, 0x94, 0xd3, 0x92, 0xba, 0xaf, 0xaa, 0x52, 0x95, 0x52, 0x41, 0x5b, 0xbf, 0xd6, 0xa0, 0x75,
	0x94, 0xf2, 0x94, 0xd1, 0x6c, 0xf6, 0xe0, 0x29, 0x0b, 0x78, 0x3e, 0xcd, 0x14, 0xf4, 0x6a, 0x4c,
	0xd4, 0x4b, 0x63, 0xa2, 0x48, 0x56, 0xca, 0xcf, 0x29, 0xa3, 0xe9, 0xc2, 0x7e, 0x4d, 0x23, 0x6e,
	0xfa, 0x15, 0x90, 0xec, 0xb2, 0x4c, 0x24, 0x6b, 0x45, 0x59, 0x64, 0x5f, 0xcc, 0x88, 0x17, 0x52,
	0xeb, 0xe7, 0xb0, 0x53, 0xd1, 0x15, 0x1d, 0xc0, 0x8b, 0x23, 0xce, 0xc4, 0x5b, 0x98, 0x27, 0x44,
	0x89, 0x23, 0xdc, 0xa1, 0xf2, 0x40, 0xe5, 0x8e, 0x24, 0x04, 0x37, 0x6b, 0x30, 0x59, 0x39, 0x67,
	0x84, 0xb5, 0x0f, 0xc8, 0x89, 0x12, 0xce, 0x52, 0xf1, 0x16, 0x9c, 0x50, 0x4e, 0xe4, 0x97, 0x17,
	0x82, 0x06, 0x27, 0x73, 0xf1, 0x90, 0xd5, 0xf7, 0x3b, 0x58, 0xae, 0xad, 0x3f, 0xea, 0x00, 0x2b,
	0xd5, 0x8d, 0xd9, 0x0c, 0x41, 0xc3, 0x8b, 0xfd, 0x3c, 0x11, 0xe5, 0x5a, 0xf0, 0x22, 0xb2, 0xa0,
	0x2a, 0x01, 0xe5, 0x5a, 0xe0, 0xf8, 0x92, 0x24, 0xd4, 0x15, 0xfc, 0x46, 0x86, 0x63, 0x4e, 0x8b,
	0x64, 0xfb, 0x65, 0x1a, 0xf3, 0x4c, 0xd8, 0xcc, 0x32, 0xba, 0x60, 0xa0, 0xcf, 0xa0, 0xbd, 0x50,
	0x0e, 0xaa, 0x7c, 0xbb, 0xa7, 0xa0, 0xdc, 0xbc, 0x01, 0x2e, 0x54, 0xc5, 0x93, 0x19, 0x44, 0x81,
	0x68, 0xc8, 0xe2, 0x11, 0x39, 0x95, 0x83, 0x5e, 0x36, 0xba, 0x6d, 0xf0, 0xd1, 0x07, 0xd0, 0x7a,
	0x25, 0xc3, 0xad, 0x62, 0x95, 0x3f, 0xfe, 0x59, 0x0e, 0x88, 0x4f, 0xca, 0x4c, 0x7c, 0xd8, 0x81,
	0xad, 0x25, 0x8b, 0xfd, 0xd4, 0xe3, 0xd6, 0x1f, 0x34, 0x40, 0xa3, 0x78, 0xee, 0xc6, 0x6c, 0x41,
	0x42, 0x1c, 0x24, 0x17, 0x27, 0xb1, 0x4f, 0x43, 0xf1, 0x9a, 0xb2, 0x20, 0xb9, 0xe8, 0xab, 0x79,
	0xe6, 0x94, 0x30, 0xb2, 0xa0, 0x9c, 0x32, 0x09, 0x99, 0x86, 0xaf, 0x17, 0x8a, 0x4f, 0x5e, 0x4e,
	0x52, 0x09, 0xa2, 0x86, 0xc5, 0x12, 0x7d, 0x02, 0xad, 0xa5, 0x10, 0x67, 0x4d, 0x73, 0xd5, 0x55,
	0x8a, 0x23, 0xe5, 0x71, 0xd2, 0x42, 0x82, 0x95, 0xaa, 0xf5, 0x15, 0xdc, 0xbe, 0x4e, 0x2e, 0x82,
	0xb6, 0x48, 0x95, 0x07, 0xfa, 0x22, 0x45, 0xdb, 0xa0, 0x31, 0x75, 0x98, 0xc6, 0x44, 0x86, 0x24,
	0xc1, 0x7c, 0x41, 0xe4, 0x49, 0x1a, 0xce, 0x08, 0x6b, 0x00, 0x7b, 0x93, 0x60, 0xb1, 0x0c, 0xe9,
	0xea, 0x6e, 0x1f, 0x15, 0x3e, 0x65, 0xaf, 0x9f, 0x59, 0xcc, 0xd4, 0x42, 0xef, 0x3a, 0x87, 0xce,
	0xa0, 0xb7, 0x21, 0x14, 0x79, 0xfc, 0x8a, 0x78, 0x3c, 0x66, 0xa3, 0x38, 0x9a, 0x2b, 0xaf, 0x4a,
	0x1c, 0xf4, 0x10, 0xba, 0x19, 0x35, 0x39, 0x8f, 0x19, 0x57, 0x7e, 0x96, 0x59, 0xd6, 0x5f, 0x34,
	0xe8, 0xd9, 0x6f, 0x38, 0x65, 0x51, 0x19, 0xfa, 0x3c, 0xed, 0xb4, 0x52, 0xda, 0xdd, 0x85, 0x56,
	0x12, 0x7b, 0x17, 0x45, 0x8d, 0x2a, 0x0a, 0x7d, 0x09, 0x2d, 0x4f, 0x36, 0x66, 0xf5, 0x04, 0xbf,
	0x9f, 0x57, 0xe7, 0xba, 0xd5, 0x83, 0xac, 0x7f, 0xdb, 0x11, 0x67, 0x57, 0x58, 0xed, 0xb9, 0xff,
	0x39, 0x74, 0x4b, 0x6c, 0x11, 0xbd, 0x8b, 0xe2, 0x63, 0x47, 0x2c, 0x57, 0x45, 0xa7, 0x4a, 0x51,
	0x12, 0x5f, 0xe8, 0x3f, 0xd6, 0xac, 0xdf, 0x6b, 0xb0, 0x3b, 0xf1, 0x48, 0x18, 0x44, 0xf3, 0x23,
	0x79, 0xa3, 0x44, 0xdc, 0x37, 0xa1, 0x84, 0x79, 0xe7, 0x23, 0xfa, 0x9a, 0x86, 0x0a, 0x90, 0x32,
	0x0b, 0xbd, 0x0f, 0x3b, 0xab, 0x9c, 0x9d, 0x07, 0x91, 0xc2, 0xa4, 0xca, 0x14, 0x43, 0x94, 0x17,
	0x8b, 0x6f, 0x73, 0xca, 0x48, 0x88, 0x69, 0x48, 0x49, 0x42, 0x55, 0x4c, 0x37, 0x05, 0xd6, 0xd7,
	0x60, 0x64, 0xfb, 0x06, 0x24, 0xf4, 0xd2, 0x90, 0xf0, 0x98, 0xa1, 0x9f, 0xc0, 0x6e, 0x52, 0xf1,
	0x4d, 0x05, 0x3a, 0xef, 0x15, 0x55, 0xc7, 0xf1, 0x9a, 0xb2, 0xf5, 0x4f, 0x1d, 0x90, 0x78, 0x5e,
	0xc9, 0xcb, 0x90, 0x96, 0x9e, 0x8c, 0x8f, 0x01, 0x82, 0x82, 0x52, 0x16, 0x7b, 0x1b, 0x25, 0x8c,
	0x4b, 0x4a, 0x68, 0x00, 0xc6, 0x62, 0xcd, 0x39, 0x79, 0xe7, 0xee, 0xd3, 0x77, 0x56, 0x73, 0x59,
	0x45, 0x8c, 0x37, 0x36, 0xa0, 0xe7, 0x80, 0xc2, 0x8d, 0x02, 0x55, 0x15, 0x7e, 0x6f, 0xbd, 0x9c,
	0x0a, 0x85, 0xe3, 0x1a, 0xbe, 0x66, 0x1b, 0x3a, 0x86, 0x1e, 0x5d, 0xcf, 0x0d, 0x35, 0xf4, 0x98,
	0x37, 0xe5, 0xce, 0x71, 0x0d, 0x6f, 0x6e, 0x42, 0x87, 0xb0, 0x97, 0x54, 0x0b, 0x4b, 0x0d, 0x41,
	0x77, 0x2b, 0xe5, 0x54, 0xb6, 0xb2, 0xbe, 0xe1, 0xb0, 0x0b, 0x1d, 0x96, 0x13, 0xd6, 0x9f, 0x75,
	0x68, 0xa9, 0x41, 0xe9, 0x9a, 0xd7, 0x59, 0x96, 0x84, 0x5e, 0x2a, 0x09, 0x07, 0x10, 0xdf, 0x08,
	0x92, 0x7a, 0x65, 0x72, 0x58, 0x36, 0xa3, 0x88, 0xaf, 0xd9, 0x24, 0xf2, 0xd2, 0xa7, 0x5e, 0xb0,
	0x20, 0xe1, 0x69, 0x48, 0x3c, 0x9a, 0xa8, 0xbf, 0x2d, 0xaa, 0x4c, 0xf4, 0x45, 0xd6, 0xb7, 0xb2,
	0x6e, 0xad, 0xf0, 0xcf, 0x31, 0xdb, 0x68, 0xe3, 0xc7, 0x35, 0x5c, 0xd2, 0x46, 0x9f, 0x42, 0xdb,
	0x57, 0x8d, 0x5b, 0xa1, 0x9d, 0xa3, 0xb4, 0xd6, 0xcf, 0xc5, 0x08, 0x97, 0x6b, 0x1e, 0xee, 0x40,
	0x97, 0x67, 0x6c, 0x81, 0xd0, 0xa3, 0x7b, 0xd0, 0x10, 0x9f, 0xfd, 0xe2, 0x8b, 0xe8, 0x30, 0xbd,
	0xca, 0xc6, 0x8f, 0x09, 0x0d, 0x43, 0x43, 0x7b, 0xf4, 0xb7, 0x3a, 0xc0, 0xea, 0xeb, 0x55, 0x08,
	0xdc, 0xb1, 0x6b, 0x1b, 0x35, 0x74, 0x07, 0x7a, 0x8e, 0xfb, 0xa2, 0x3f, 0x72, 0x86, 0xb3, 0xec,
	0x4b, 0x72, 0xe6, 0x0c, 0x0d, 0x0d, 0xdd, 0x06, 0x23, 0x67, 0x8f, 0xf1, 0xd0, 0xc6, 0x82, 0xab,
	0xa3, 0x7b, 0x70, 0x27, 0xa3, 0xc6, 0x67, 0xd3, 0xd9, 0xf8, 0x68, 0x36, 0xb1, 0xbf, 0x3e, 0xb3,
	0xdd, 0x81, 0x6d, 0xd4, 0xd1, 0x7d, 0xb8, 0x9b, 0x6f, 0xc0, 0xf6, 0x49, 0xdf, 0x71, 0x1d, 0xf7,
	0xd9, 0x6c, 0xe2, 0x7c, 0x67, 0x1b, 0x0d, 0x64, 0xc0, 0xf6, 0xd4, 0x39, 0xb1, 0x67, 0x62, 0x2c,
	0x3a, 0xc3, 0xb6, 0xd1, 0x5c, 0x19, 0xc2, 0xf6, 0xc9, 0xf8, 0x45, 0x7f, 0x54, 0x88, 0x5a, 0xe8,
	0x3d, 0x78, 0x90, 0x1b, 0xb2, 0x7f, 0x76, 0xea, 0xe0, 0xfe, 0xd4, 0x19, 0xbb, 0xb3, 0x61, 0x7f,
	0x6a, 0x0b, 0x1b, 0xc6, 0x16, 0x7a, 0x00, 0xef, 0x54, 0x5d, 0xc3, 0xf6, 0x91, 0x8d, 0xa5, 0x1b,
	0x6d, 0xe1, 0xb7, 0x3d, 0x74, 0xa6, 0x33, 0x77, 0x3c, 0x9d, 0xf5, 0x47, 0xa3, 0xf1, 0x37, 0xf6,
	0xd0, 0xe8, 0xa0, 0x77, 0xe0, 0x56, 0xa6, 0xda, 0x3f, 0xb1, 0xdd, 0x61, 0x71, 0x18, 0x88, 0xaf,
	0xd9, 0x4c, 0x20, 0xf4, 0x8f, 0xc6, 0x67, 0xee, 0xd0, 0xe8, 0x96, 0xef, 0x7e, 0xda, 0xc7, 0xd3,
	0x6f, 0xc5, 0xdd, 0xb7, 0x51, 0x0f, 0x76, 0x14, 0x40, 0x83, 0xd1, 0x58, 0xcc, 0x71, 0x3b, 0xc2,
	0xec, 0x49, 0x1f, 0x3f, 0x73, 0xdc, 0xd9, 0xe0, 0xd8, 0x1e, 0x3c, 0x9f, 0xa9, 0xb1, 0x6f, 0x57,
	0xb8, 0x78, 0xe2, 0x4c, 0x26, 0x02, 0x82, 0x67, 0xb6, 0x6b, 0xe3, 0xfe, 0x68, 0xd6, 0x1f, 0x0c,
	0xc6, 0x67, 0xee, 0xd4, 0xd8, 0x43, 0x08, 0x76, 0x1d, 0x77, 0x6a, 0x63, 0xb7, 0x3f, 0x9a, 0xd9,
	0x18, 0x8f, 0xb1, 0x61, 0x08, 0x84, 0xf2, 0x23, 0x25, 0x66, 0x3d, 0x61, 0xbb, 0x70, 0xc2, 0xc6,
	0x13, 0x67, 0x32, 0x95, 0x37, 0x44, 0x87, 0x4f, 0xbe, 0x7b, 0x2c, 0x86, 0x8f, 0x83, 0xd7, 0x74,
	0x4e, 0xe4, 0x5f, 0xce, 0x5e, 0x1c, 0x1e, 0x04, 0xf1, 0x13, 0xef, 0x9c, 0x04, 0xd1, 0x63, 0xfa,
	0x66, 0x19, 0xc6, 0x8c, 0xb2, 0xc7, 0x64, 0x19, 0x3c, 0x91, 0xe2, 0x97, 0x2d, 0xf9, 0xf3, 0xc9,
	0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x12, 0xf7, 0x04, 0xe3, 0xad, 0x16, 0x00, 0x00,
}
